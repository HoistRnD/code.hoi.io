{
  "version": 3,
  "file": "/Users/jamiewilson/Library/Containers/com.bitnami.mampstack/Data/app-5_4_9/apache2/htdocs/hoist-js/build/out/hoist.js",
  "sources": [
    "Hoist.js"
  ],
  "names": [],
  "mappings
  "sourcesContent": [
    "\n/*jshint loopfunc: true */\nvar Hoist = (function () {\n\tvar configs = {\n\t\t\tprotocol: \"https://\"\n\t\t},\n\t\tuser,\n\t\ttoString = Object.prototype.toString,\n\t\tsplice = Array.prototype.splice,\n\t\tu;\n\t\t\n\t// helpers\n\n\tfunction extend(into, from) {\n\t\tfor (var x in from) into[x] = from[x];\n\t}\n\t\t\n\tfunction get(obj, key, nothing) {\n\t\tif (key.indexOf('.') == -1) {\n\t\t\treturn obj[key];\n\t\t} else {\n\t\t\tkey = key.split('.');\n\t\t\t\n\t\t\tfor (var i = 0; i < key.length - 1; i++) {\n\t\t\t\tobj = obj[key[i]];\n\t\t\t\tif (!obj) return \"\";\n\t\t\t}\n\t\t\t\n\t\t\treturn obj[key[i]];\n\t\t}\n\t}\n\t\n\tfunction classOf(data) {\n\t\treturn toString.call(data).slice(8, -1);\n\t}\n\t\n\tfunction asyncError(error, context) {\n\t\tif (typeof error !== \"function\") return;\n\t\t\n\t\tvar args = splice.call(arguments, 2);\n\t\t\n\t\tsetTimeout(function () {\n\t\t\terror.apply(context, args);\n\t\t}, 0);\n\t}\n\t\n\t// ajax helper\n\t\n\tfunction request(opts, success, error, context) {\n\t\tvar method, contentType, responseType;\n\n\t\tif (\"data\" in opts) {\n\t\t\tvar type = classOf(opts.data);\n\t\t\n\t\t\tif (type === \"String\") {\n\t\t\t\tcontentType = \"application/json\";\n\t\t\t} else if (type === \"FormData\") {\n\t\t\t\tmethod = \"POST\";\n\t\t\t} else {\n\t\t\t\tmethod = \"POST\";\n\t\t\t\tcontentType = \"application/json\";\n\t\t\t\topts.data = JSON.stringify(opts.data);\n\t\t\t}\n\t\t} else {\n\t\t\tmethod = opts.method || \"GET\";\n\t\t}\n\t\t\n\t\tif (typeof error !== \"function\") {\n\t\t\tif (!context) context = error;\n\t\t\terror = null;\n\t\t}\n\t\t\n\t\tif (!configs.apikey) {\n\t\t\treturn asyncError(error, context, \"API key not set\", null);\n\t\t}\n\t\t\n\t\tvar xhr = new XMLHttpRequest();\n\t\t\n\t\txhr.open(method, configs.protocol + opts.url);\n\t\t\n\t\tresponseType = opts.responseType || \"json\";\n\t\t\n\t\t// Safari will error out (!) if we try to set a responseType of \"json\"\n\t\t\n\t\tif (responseType != \"json\") {\n\t\t\txhr.responseType = responseType;\n\t\t\t\n\t\t\t// Safari before 6.1 does not support \"blob\" but does support \"arraybuffer\"\n\t\t\t\n\t\t\tif (responseType == \"blob\" && xhr.responseType != \"blob\") {\n\t\t\t\txhr.responseType = \"arraybuffer\";\n\t\t\t}\n\t\t}\n\t\t\n\t\tcontentType && xhr.setRequestHeader(\"Content-Type\", contentType);\n\t\t\n\t\txhr.setRequestHeader(\"Authorization\", \"Hoist \" + configs.apikey);\n\t\t\n\t\txhr.withCredentials = true;\n\t\t\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tif (xhr.status >= 200 && xhr.status < 400) {\n\t\t\t\t\tvar response = xhr.response || xhr.responseText,\n\t\t\t\t\t\ttype = classOf(response);\n\t\t\t\t\n\t\t\t\t\tif (type === \"String\" && responseType === \"json\") {\n\t\t\t\t\t\tresponse = JSON.parse(response);\n\t\t\t\t\t} else if (type === \"ArrayBuffer\" && responseType === \"blob\") {\n\t\t\t\t\t\tresponse = new Blob([response]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tsuccess && success.call(context, response, xhr);\n\t\t\t\t} else {\n\t\t\t\t\terror && error.call(context, xhr.statusText, xhr);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\txhr.send(opts.data);\n\t}\n\t\n\tvar managers = {};\n\t\n\t// simple data manager\n\t\n\tfunction DataManager(type) {\n\t\tthis.type = type;\n\t\tthis.url = \"data.hoi.io/\" + type;\n\t}\n\t\n\textend(DataManager.prototype, {\n\t\tget: function (id, success, error, context) {\n\t\t\tif (typeof id === \"function\" || id === undefined) {\n\t\t\t\tcontext = error;\n\t\t\t\terror = success;\n\t\t\t\tsuccess = id;\n\t\t\t\t\n\t\t\t\trequest({ url: this.url }, success, error, context);\n\t\t\t} else {\n\t\t\t\trequest({ url: this.url + \"/\" + id }, success, error, context);\n\t\t\t}\n\t\t},\n\t\t\n\t\tpost: function (id, data, success, error, context) {\n\t\t\tif (typeof id === \"object\") {\n\t\t\t\tvar multiple = classOf(id) === \"Array\";\n\t\t\t\n\t\t\t\tcontext = error;\n\t\t\t\terror = success;\n\t\t\t\tsuccess = data;\n\t\t\t\tdata = id;\n\t\t\t\t\n\t\t\t\tif (data._id) {\n\t\t\t\t\tid = data._id;\n\t\t\t\t} else {\n\t\t\t\t\trequest({ url: this.url, data: data }, success && function (resp, xhr) {\n\t\t\t\t\t\tsuccess.call(this, multiple ? resp : resp[0], xhr);\n\t\t\t\t\t}, error, context);\n\t\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\trequest({ url: this.url + \"/\" + id, data: data }, success, error, context);\n\t\t},\n\t\t\n\t\tclear: function (success, error, context) {\n\t\t\trequest({ url: this.url, method: \"DELETE\" }, success, error, context);\n\t\t},\n\t\t\n\t\tremove: function (id, success, error, context) {\n\t\t\tif (!id) {\n\t\t\t\treturn asyncError(error, context, \"Cannot remove model with empty id\", null);\n\t\t\t}\n\t\t\n\t\t\trequest({ url: this.url + \"/\" + id, method: \"DELETE\" }, success, error, context);\n\t\t}\n\t});\n\t\n\t// complex data manager\n\t\n\tvar tagRegex = /\\[([^\\]]+)\\]/g;\n\n\tfunction ObjectDataManager(hash) {\n\t\tvar items = this.items = {};\n\n\t\tfor (var x in hash) {\n\t\t\tvar item = { key: x, path: hash[x], requires: [] },\n\t\t\t\tmatch;\n\n\t\t\tif (item.path[item.path.length - 1] == '?') {\n\t\t\t\titem.path = item.path.slice(0, -1);\n\t\t\t\titem.optional = true;\n\t\t\t}\n\n\t\t\twhile ((match = tagRegex.exec(item.path)) !== null) {\n\t\t\t\tvar dot = match[1].indexOf('.');\n\t\t\t\n\t\t\t\tif (dot > -1) {\n\t\t\t\t\titem.requires.push(match[1].slice(0, dot));\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\titems[x] = item;\n\t\t}\n\t}\n\t\n\textend(ObjectDataManager.prototype, {\n\t\tget: function (data, success, error, context) {\n\t\t\tvar items = {},\n\t\t\t\tresult = {},\n\t\t\t\tmanagers = {},\n\t\t\t\tfailed;\n\t\t\t\t\n\t\t\tif (typeof data === \"function\") {\n\t\t\t\tcontext = error;\n\t\t\t\terror = success;\n\t\t\t\tsuccess = data;\n\t\t\t\tdata = {};\n\t\t\t} else if (typeof data === \"string\") {\n\t\t\t\tdata = { id: data };\n\t\t\t}\n\t\t\t\n\t\t\textend(items, this.items);\n\t\t\t\n\t\t\tif (typeof error !== \"function\") {\n\t\t\t\tif (!context) context = error;\n\t\t\t\terror = null;\n\t\t\t}\n\t\t\n\t\t\tfunction succeed(key) {\n\t\t\t\treturn function (data) {\n\t\t\t\t\tresult[key] = data;\n\t\t\t\t\tdelete items[key];\n\t\t\t\t\tadvance();\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\tfunction fail(key) {\n\t\t\t\treturn function (msg, xhr) {\n\t\t\t\t\tif (items[key].optional) {\n\t\t\t\t\t\tsucceed(key)(null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfailed = true;\n\t\t\t\t\t\terror && error.call(context, key + \": \" + msg, xhr);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\tfunction advance() {\n\t\t\t\tif (failed) return;\n\t\t\t\n\t\t\t\tvar loading = 0;\n\t\t\t\t\n\t\t\t\tout: for (var x in items) {\n\t\t\t\t\tvar item = items[x];\n\t\t\t\n\t\t\t\t\tif (!managers[x]) {\n\t\t\t\t\t\tfor (var i = 0; i < item.requires.length; i++) {\n\t\t\t\t\t\t\tif (item.requires[i] in items) {\n\t\t\t\t\t\t\t\tcontinue out;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\tvar path = item.path.replace(tagRegex, function (a, b) {\n\t\t\t\t\t\t\t\tif (b.indexOf('.') > -1) {\n\t\t\t\t\t\t\t\t\treturn get(result, b);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn data[b] || \"\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tspace = path.indexOf(' ');\n\n\t\t\t\t\t\tif (space > -1) {\n\t\t\t\t\t\t\t(managers[item.key] = Hoist(path.slice(0, space))).get(path.slice(space + 1), succeed(item.key), fail(item.key));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t(managers[item.key] = Hoist(path)).get(succeed(item.key), fail(item.key));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tloading++;\n\t\t\t\t}\n\t\t\t\n\t\t\t\tif (!loading) success.call(context, result, managers);\n\t\t\t}\n\t\t\t\n\t\t\tadvance();\n\t\t}\n\t});\n\n\tHoist = function (type) {\n\t\tif (classOf(type) === \"Object\") {\n\t\t\treturn new ObjectDataManager(type);\n\t\t} else {\n\t\t\treturn managers[type] || (managers[type] = new DataManager(type));\n\t\t}\n\t};\n\t\n\textend(Hoist, {\n\t\tapiKey: function (v) {\n\t\t\treturn this.config(\"apikey\", v);\n\t\t},\n\t\t\n\t\tget: function (type, id, success, error, context) {\n\t\t\tHoist(type).get(id, success, error, context);\n\t\t},\n\t\t\n\t\tpost: function (type, id, data, success, error, context) {\n\t\t\tHoist(type).post(id, data, success, error, context);\n\t\t},\n\t\t\n\t\tclear: function (type, success, error, context) {\n\t\t\tHoist(type).clear(success, error, context);\n\t\t},\n\t\t\n\t\tremove: function (type, id, success, error, context) {\n\t\t\tHoist(type).remove(id, success, error, context);\n\t\t},\n\t\n\t\tconfig: function (a, b) {\n\t\t\tif (b === u) {\n\t\t\t\tvar type = typeof a;\n\t\t\t\n\t\t\t\tif (type === \"string\") {\n\t\t\t\t\treturn configs[a];\n\t\t\t\t} else if (type === \"object\") {\n\t\t\t\t\tfor (var x in a) {\n\t\t\t\t\t\tconfigs[x.toLowerCase()] = a[x];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconfigs[a.toLowerCase()] = b;\n\t\t\t}\n\t\t},\n\t\t\n\t\tstatus: function (success, error, context) {\n\t\t\trequest({ url: \"auth.hoi.io/status\" }, function (resp) {\n\t\t\t\tuser = resp;\n\t\t\t\tsuccess && success.apply(this, arguments);\n\t\t\t}, error, context);\n\t\t},\n\t\t\n\t\tsignup: function (member, success, error, context) {\n\t\t\tif (typeof member === \"object\") {\n\t\t\t\trequest({ url: \"auth.hoi.io/user\", data: member }, function (resp) {\n\t\t\t\t\tuser = resp;\n\t\t\t\t\tsuccess && success.apply(this, arguments);\n\t\t\t\t}, error, context);\n\t\t\t}\n\t\t},\n\t\t\n\t\tlogin: function (member, success, error, context) {\n\t\t\tif (typeof member === \"object\") {\n\t\t\t\trequest({ url: \"auth.hoi.io/login\", data: member }, function (resp) {\n\t\t\t\t\tuser = resp;\n\t\t\t\t\tsuccess && success.apply(this, arguments);\n\t\t\t\t}, error, context);\n\t\t\t}\n\t\t},\n\t\t\n\t\tlogout: function (success, error, context) {\n\t\t\trequest({ url: \"auth.hoi.io/logout\", method: \"POST\" }, success, error, context);\n\t\t},\n\t\t\n\t\tuser: function () {\n\t\t\treturn user;\n\t\t},\n\t\t\n\t\tnotify: function (id, data, success, error, context) {\n\t\t\tif (typeof id === \"object\") {\n\t\t\t\tcontext = error;\n\t\t\t\terror = success;\n\t\t\t\tsuccess = data;\n\t\t\t\tdata = id.data;\n\t\t\t\tid = id.id;\n\t\t\t}\n\t\t\t\n\t\t\tif (typeof data === \"object\") {\n\t\t\t\trequest({ url: \"notify.hoi.io/notification/\" + id, data: data }, success, error, context);\n\t\t\t}\n\t\t},\n\t\t\n\t\tfile: function (key, file, success, error, context) {\n\t\t\tif (file.jQuery) file = file[0];\n\t\t\n\t\t\tvar type = classOf(file),\n\t\t\t\tdata;\n\t\t\t\n\t\t\tif (type === \"File\") {\n\t\t\t\tdata = new FormData();\n\t\t\t\tdata.append(\"file\", file);\n\t\t\t} else if (type === \"FormData\") {\n\t\t\t\tdata = file;\n\t\t\t} else if (type === \"HTMLInputElement\") {\n\t\t\t\tfile = file.files && file.files[0];\n\t\t\t\t\n\t\t\t\tif (!file) return false;\n\t\t\t\n\t\t\t\tdata = new FormData();\n\t\t\t\tdata.append(\"file\", file);\n\t\t\t} else if (type === \"Function\") {\n\t\t\t\tcontext = error;\n\t\t\t\terror = success;\n\t\t\t\tsuccess = file;\n\n\t\t\t\trequest({ url: \"file.hoi.io/\" + key, responseType: \"blob\" }, success, error, context);\n\t\t\t\treturn;\n\t\t\t} else if (type === \"Undefined\") {\n\t\t\t\trequest({ url: \"file.hoi.io/\" + key, responseType: \"blob\" }, success, error, context);\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\trequest({ url: \"file.hoi.io/\" + key, data: data }, success, error, context);\n\t\t}\n\t});\n\t\n\tHoist.clone = arguments.callee;\n\t\n\treturn Hoist;\n})();\n\n\nif (typeof define === \"function\" && define.amd) {\n\tdefine(\"Hoist\", [], function() {\n\t\treturn Hoist;\n\t});\n}\nelse\n{\n\t//put hoist on the global namespace\n\twindow.Hoist = Hoist;\n};"
  ]
}