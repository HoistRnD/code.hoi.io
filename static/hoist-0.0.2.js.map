{
  "version": 3,
  "file": "/Volumes/Store/Projects/hoist/hoist-js/build/out/hoist.js",
  "sources": [
    "Hoist.js"
  ],
  "names": [],
  "mappings
  "sourcesContent": [
    "\nvar Hoist = (function(u) {\n\tvar configs = {},\n\t\tuser,\n\t\ttoString = Object.prototype.toString;\n\n\tfunction extend(into, from) {\n\t\tfor (var x in from) into[x] = from[x];\n\t}\n\n\tfunction classOf(data) {\n\t\treturn toString.call(data).slice(8, -1);\n\t}\n\n\t// ajax helper\n\n\tfunction request(url, data, success, error, context) {\n\t\tvar type = classOf(data),\n\t\t\tmethod,\n\t\t\tcontentType;\n\n\t\tif (type === \"Object\") {\n\t\t\tmethod = \"POST\";\n\t\t\tcontentType = \"application/json\";\n\t\t\tdata = JSON.stringify(data);\n\t\t} else if (type === \"String\") {\n\t\t\tmethod = \"POST\";\n\t\t\tcontentType = \"application/json\";\n\t\t} else if (type === \"FormData\") {\n\t\t\tmethod = \"POST\";\n\t\t\tcontentType = \"multipart/form-data\";\n\t\t} else if (type === \"File\") {\n\t\t\tmethod = \"POST\";\n\t\t\tcontentType = data.type;\n\t\t} else {\n\t\t\tmethod = \"GET\";\n\t\t\tcontext = error;\n\t\t\terror = success;\n\t\t\tsuccess = data;\n\t\t\tdata = null;\n\t\t}\n\n\t\tif (typeof error !== \"function\") {\n\t\t\tcontext = error;\n\t\t\terror = null;\n\t\t}\n\n\t\tif (!configs.apikey) {\n\t\t\terror && setTimeout(function() {\n\t\t\t\terror.call(context, \"API key not set\", null);\n\t\t\t}, 0);\n\t\t}\n\n\t\tvar xhr = new XMLHttpRequest();\n\n\t\txhr.open(method, url);\n\n\t\tif (method === \"POST\") {\n\t\t\txhr.setRequestHeader(\"Content-Type\", contentType);\n\t\t}\n\n\t\txhr.setRequestHeader(\"Authorization\", \"Hoist \" + configs.apikey);\n\n\t\txhr.withCredentials = true;\n\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tif (xhr.status >= 200 && xhr.status < 300) {\n\t\t\t\t\tsuccess && success.call(context, JSON.parse(xhr.responseText), xhr);\n\t\t\t\t} else {\n\t\t\t\t\terror && error.call(context, xhr.statusText, xhr);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\txhr.send(data);\n\t}\n\n\tvar managers = {};\n\n\tfunction DataManager(type) {\n\t\tthis.type = type;\n\t\tthis.url = \"https://data.hoi.io/\" + type;\n\t}\n\n\textend(DataManager.prototype, {\n\t\tget: function(id, success, error, context) {\n\t\t\tif (typeof id === \"function\") {\n\t\t\t\tcontext = error;\n\t\t\t\terror = success;\n\t\t\t\tsuccess = id;\n\n\t\t\t\trequest(this.url, success, error, context);\n\t\t\t} else {\n\t\t\t\trequest(this.url + \"/\" + id, success, error, context);\n\t\t\t}\n\t\t},\n\n\t\tpost: function(id, data, success, error, context) {\n\t\t\tif (typeof id === \"object\") {\n\t\t\t\tcontext = error;\n\t\t\t\terror = success;\n\t\t\t\tsuccess = data;\n\t\t\t\tdata = id;\n\n\t\t\t\tif (data.x_id) {\n\t\t\t\t\tid = data.x_id;\n\t\t\t\t} else {\n\t\t\t\t\trequest(this.url, data, success, error, context);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trequest(this.url + \"/\" + id, data, success, error, context);\n\t\t}\n\t});\n\n\tHoist = function(type) {\n\t\treturn managers[type] || (managers[type] = new DataManager(type));\n\t};\n\n\textend(Hoist, {\n\t\tapiKey: function(v) {\n\t\t\treturn this.config(\"apikey\", v);\n\t\t},\n\n\t\tconfig: function(a, b) {\n\t\t\tif (b === u) {\n\t\t\t\tvar type = typeof a;\n\n\t\t\t\tif (type === \"string\") {\n\t\t\t\t\treturn configs[a];\n\t\t\t\t} else if (type === \"object\") {\n\t\t\t\t\tfor (var x in a) {\n\t\t\t\t\t\tconfigs[x.toLowerCase()] = a[x];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconfigs[a.toLowerCase()] = b;\n\t\t\t}\n\t\t},\n\n\t\tstatus: function(success, error, context) {\n\t\t\trequest(\"https://auth.hoi.io/status\", success, error, context);\n\t\t},\n\n\t\tsignup: function(member, success, error, context) {\n\t\t\tif (typeof member === \"object\") {\n\t\t\t\trequest(\"https://auth.hoi.io/user\", member, function(resp) {\n\t\t\t\t\tuser = resp;\n\t\t\t\t\tsuccess.apply(this, arguments);\n\t\t\t\t}, error, context);\n\t\t\t}\n\t\t},\n\n\t\tlogin: function(member, success, error, context) {\n\t\t\tif (typeof member === \"object\") {\n\t\t\t\trequest(\"https://auth.hoi.io/login\", member, function(resp) {\n\t\t\t\t\tuser = resp;\n\t\t\t\t\tsuccess.apply(this, arguments);\n\t\t\t\t}, error, context);\n\t\t\t}\n\t\t},\n\n\t\tnotify: function(id, data, success, error, context) {\n\t\t\tif (typeof id === \"object\") {\n\t\t\t\tcontext = error;\n\t\t\t\terror = success;\n\t\t\t\tsuccess = data;\n\t\t\t\tdata = id.data;\n\t\t\t\tid = id.id;\n\t\t\t}\n\n\t\t\tif (typeof data === \"object\") {\n\t\t\t\trequest(\"https://notify.hoi.io/notification/\" + id, data, success, error, context);\n\t\t\t}\n\t\t},\n\n\t\tfile: function(key, file, success, error, context) {\n\t\t\tif (file.jQuery) file = file[0];\n\n\t\t\tvar type = classOf(file),\n\t\t\t\tdata;\n\n\t\t\tif (type === \"File\") {\n\t\t\t\tdata = new FormData();\n\t\t\t\tdata.append(\"FILE\", file);\n\t\t\t} else if (type === \"FormData\") {\n\t\t\t\tdata = file;\n\t\t\t} else if (type === \"HTMLInputElement\") {\n\t\t\t\tfile = file.files && file.files[0];\n\n\t\t\t\tif (!file) return false;\n\n\t\t\t\tdata = new FormData();\n\t\t\t\tdata.append(\"file\", file);\n\t\t\t} else if (type === \"Function\") {\n\t\t\t\tcontext = error;\n\t\t\t\terror = success;\n\t\t\t\tsuccess = file;\n\n\t\t\t\trequest(\"https://file.hoi.io/\" + key, success, error, context);\n\t\t\t\treturn;\n\t\t\t} else if (type === \"Undefined\") {\n\t\t\t\trequest(\"https://file.hoi.io/\" + key, success, error, context);\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trequest(\"https://file.hoi.io/\" + key, data, success, error, context);\n\t\t}\n\t});\n\n\tHoist.clone = arguments.callee;\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine(\"Hoist\", [], function() {\n\t\t\treturn Hoist;\n\t\t});\n\t}\n\telse\n\t{\n\t\t//put hoist on the global namespace\n\t\twindow.Hoist = Hoist;\n\t}\n\n})();\n"
  ]
}